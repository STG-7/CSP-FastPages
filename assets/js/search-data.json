{
  
    
        "post0": {
            "title": "WGET this file and complete fully and thoroughly in order to be graded",
            "content": "What are 5 Basic UI Elements?: . 2. 3. | | | In your own words, explain what SASS does: . ### What are some benefits to SASS?: . | | . Describe/Explain one of the more &quot;advanced&quot; SASS properties below in detail: . - . Hacks - Insert any screenshots, code segments, etc. that you need to . Hacks Part 1 . Add your own element to your own repository to make it unique (0.9) | Hacks Part 2 . Add the style change button to your own github page (0.9) Change the button to your own styles | See if you can let make it change to multiple different styles (we understand that it is hard to create multiple distinct styles so you are only required to make it clear you have at least three different styles at can be changed) | . | Extra: Try and incorporate something you learned in the lesson into your CPT Project (0.1) | Hacks Part 3 . Add SASS to Number Guesser Game provided (0.9) or create your own Javascript game/application and add SASS to it (0.9+) | We will collectively decide on the &quot;best&quot; game/app and award potential seed. |",
            "url": "https://stg-7.github.io/FastPages/2023/04/22/studentfile.html",
            "relUrl": "/2023/04/22/studentfile.html",
            "date": " • Apr 22, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "WGET this file and complete fully and thoroughly in order to be graded",
            "content": "What are 5 Basic UI Elements?: . Color: The color UI element refers to the use of different colors in user interfaces to communicate information or enhance the visual appeal of a design. Color can be used to create contrast, hierarchy, and mood in a design, and can also be used to represent branding or identity. . Font: The font UI element refers to the style of the text used in user interfaces. The font can impact the readability, tone, and style of a design, and can be used to reinforce a brand or identity. . Layout: The layout UI element refers to the arrangement of visual elements on a screen or page in a user interface. An effective layout can improve the usability, organization, and visual appeal of a design, and can help guide the user’s attention to important information. . Icons: The icons UI element refers to small graphical representations of concepts, actions, or objects that are used in user interfaces. Icons can help communicate information quickly and efficiently, and can also enhance the visual appeal and brand identity of a design. . Accessibility: The accessibility UI element refers to the design of user interfaces that are usable and understandable by people with disabilities or limitations. This can include considerations such as color contrast, text size, keyboard navigation, and screen reader compatibility, among others. . In your own words, explain what SASS does: . SASS is a preprocessor for CSS that allows developers to write CSS more efficiently and with more advanced features. It adds functionality such as variables, nesting, mixins, and functions, making it easier to write and maintain complex stylesheets. Ultimately, SASS helps streamline the CSS development process and improve the organization and scalability of stylesheets. . What are some benefits to SASS: . SASS provides features like variables, nesting, and mixins, which increase efficiency and productivity in CSS development. It also allows for improved organization and scalability of stylesheets, code reusability, and better readability. . Describe/Explain one of the more “advanced” SASS properties below in detail: . One of the more advanced SASS properties is the @extend directive, which allows developers to share a set of CSS properties from one selector to another. The @extend directive is used to create a relationship between two selectors, where the second selector inherits all the properties of the first. . For example, suppose we have a button element with a default set of properties: . .button { background-color: blue; color: white; padding: 10px; border-radius: 5px; } . Now, let’s say we want to create a special variation of this button with a green background color. Instead of duplicating the code for the default button, we can use the @extend directive to inherit the properties of the default button and only override the background color: . .button--special { @extend .button; background-color: green; } . This will create a new selector called .button–special that inherits all the properties of .button and adds a green background color. The resulting CSS will look like this: . .button, .button--special { background-color: blue; color: white; padding: 10px; border-radius: 5px; } .button--special { background-color: green; } . Using @extend instead of duplicating code reduces redundancy and improves maintainability of the stylesheet. It also allows for more flexibility in creating variations of existing styles without having to start from scratch. . Hacks - Insert any screenshots, code segments, etc. that you need to . Hacks Part 1 .",
            "url": "https://stg-7.github.io/FastPages/2023/04/22/studendfile.html",
            "relUrl": "/2023/04/22/studendfile.html",
            "date": " • Apr 22, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "2018 Practice Exam MCQ - Shaurya Goel",
            "content": "Overall Score 63/66 (95%) . from PIL import Image score = Image.open(&quot;../images/OverallScoreTest1.png&quot;) display(score) . Wrong Answers (Questions 12, 23, 31) . from PIL import Image wrong1 = Image.open(&quot;../images/test1wrong1.png&quot;) wrong2 = Image.open(&quot;../images/test1wrong2.png&quot;) wrong3 = Image.open(&quot;../images/test1wrong3.png&quot;) display(wrong1) display(wrong2) display(wrong3) . Correcting Wrong Answer - Question 12 . My Mistake: . Did not read the question properly, thought that it was asking me to approximate the total number of registered users, in millions, in year 11 rather than what year 12, which is what it was acutally asking. . Why Option A) Is Incorrect: . 30.6 is incorrect because this is a better estimate for year 11. At year 10, the number of users (in millions) was 30.2, and the trend that I noticed is a 0.5 increase every year. 30.6 would be a great estimate for year 11, not year 12. . Why Option B) Is Correct: . The total number of registered users appears to be increasing by about 0.5 million each year, so in year 12, the number of users can be approximated at 31.2 million (30.2 + 0.5 + 0.5). . Correcting Wrong Answer - Question 23 . Why Option A) Is Incorrect: . This option is incorrect. There are multiple paths from P to S (for example, P to R to S and P to Q to S). . Why Option B) Is Correct: . This option is correct. Redundant routing is impossible if there is only one possible path from one device to another. There is only one possible path from P to S (P to R to Q to S). . Correcting Wrong Answer - Question 31 . Why Option D) Is Incorrect and Option C) Is Correct: . Program I correctly moves the robot to the gray square by repeatedly moving the robot forward, rotating left, moving forward, and rotating right. Program II correctly moves the robot to the gray square by moving the robot forward to the upper-right corner of the grid, rotating left, and moving forward to the upper-left corner of the grid. .",
            "url": "https://stg-7.github.io/FastPages/2023/04/17/PracticeTest1.html",
            "relUrl": "/2023/04/17/PracticeTest1.html",
            "date": " • Apr 17, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Computers and Networks (Unit 4)",
            "content": "Requirements . Work through College Board Unit 4… blog, add definitions, and pictures. Be creative, for instance make a story of Computing and Networks that is related to your PBL experiences this year. . How a Computer Works . As we have learned, a computer needs aa program to do something smart. The sequence of a program initiates a series of actions with the computers Central Processing Unit (CPU). This component is essentially a binary machine focussing on program instructions provided. The CPU retrieives and stores the data it acts upon in Random Access Memory (RAM). Between the CPU, RAM, and Storage Devices a computer can work with many programs and large amounts of data. . List specification of your Computer, or Computers if working as Pair/Trio . Processor GHz: 2.60 | Memory in GB: 26.4 | Storage in GB: 500 | OS: Microsoft Windows 11 Home | . Define or describe usage of Computer using Computer Programs. Pictures are preferred over a lot of text. Use your experience. . Input devices | Output devices | Program File | Program Code | Processes | Ports | Data File | Inspect Running Code | Inspect Variables | . . The Internet . Watch/review College Board Daily Video for 4.1.1 . Essential Knowledge A computing device is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. | A computing system is a group of computing devices and programs working together for a common purpose. | A computer network is a group of interconnected computing devices capable of sending or receiving data. | A computer network is a type of computing system. | A path between two computing devices on a computer network (a sender and a receiver) is a sequence of directly connected computing devices that begins at the sender and ends at the receiver. | Routing is the process of finding a path from sender to receiver. | The bandwidth of a computer network is the maximum amount of data that can be sent in a fixed amount of time. | Bandwidth is usually measured in bits per second | . | Complete Vocabulary Matching Activity. Incorporate this into your learnings from year. To analyze measure path and latency use traceroute and ping commands from Linux Terminal. Path | Route | Computer System | Computer Device | Bandwidth | Computer Network | . | . Watch/review College Board Daily Video 4.1.2 . Complete True of False Questions | . TRUE: Open standards and protocols enable different manufacturers and developers to build hardware and software that can communicate with hardware and software on the rest of the internet. FALSE: IETF is a task force used to enforce laws to keep manufacturers out of the internet. FALSE: Routes are determined in advance and are not flexible. TRUE: A protocol is an agreed-upon set of rules that specify the behavior of a system. FALSE: UDP guarantees transfers and is faster. FALSE: The World Wide Web is the internet. TRUE: HTTP is a protocol used by the World Wide Web. . Essential Knowledge The internet is a computer network consisting of interconnected networks that use standardized, open (nonproprierary) communication protocols. | Access to the internet depends on the ability to connect a computing device to an internet connected device. | A protocol is an agreed-upon set of rules that specify the behavior of a system. | The protocols used in the internet are open, which allows users to easily connect additional computing devices to the internet. | Routing on the internet is usually dynamic; it is not specified in advance | The scalability of a system is the capacity for the system to change in size and scale to meet new demands. | The internet was designed to be scalable | Information is passed through the internet as a data stream. Data streams contain chunks of data, which are encapsulated in packets. | Packets contain a chunk of data and metadata used for routing the packet between the origin and the destination on the internet, as well as for data reassembly. | Packets may arrive at the destination in order, out of order, or not at all | IP, TCP and UDP are common protocols used on the internet. | The world wide web is a system of linked pages, programs, and files. | HTTP is a protocol used by the world wide web | The world wide web uses the internet | . | Go over AP videos, vocabulary, and essential knowledge. Draw a diagram showing the internet and its many levels. A preferred diagram would using your knowledge of frontend, backend, deployment, etc. Picture would highligh vocabulary by illustration. The below illustration have some ideas | . . Often we draw pictures of machines communicating over the Internet with arrows. However, the real communication goes through protocol layers and the machine and then is trasported of the network. For College Board and future Computer Knowledge you should become familiar with the following … | . User Machine &lt;&gt; Frontend Server &lt;&gt; Backend Server +--+ +--+ +--+ | Browser | | GH Page | | Flask | +--+ ^ +--+ ^ +--+ | HTTP | | | HTTP | | | HTTP | +--+ | +--+ | +--+ | TCP | | | TCP | | | TCP | +--+ | +--+ | +--+ | IP | V | IP | V | IP | +--+ +--+ +--+ | Network | &lt;&gt; | Network | &lt;&gt; | Network | +--+ +--+ +--+ . The “http” layer is an application layer protocol in the TCP/IP stack, used for communication between web browsers and web servers. It is the protocol used for transmitting data over the World Wide Web. . The “transport” layer (TCP) is responsible for providing reliable data transfer between applications running on different hosts. The TCP protocol segments the data into smaller chunks called “segments”. Each segment contains a sequence number that identifies its position in the original stream of data, as well as other control information such as source and destination port numbers, and checksums for error detection. . The “ip” layer is responsible for packetizing data received from the TCP layer of the protocol stack, and then encapsulating the data into IP packets. The IP packets are then sent to the lower layers of the protocol stack for transmission over the network. . The “network” layer is responsible for routing data packets between networks using the Internet Protocol (IP). This layer handles tasks such as packet addressing and routing, fragmentation and reassembly, and network congestion control. . Fault Tolerance . Watch both Daily videos for 4.2 . Complete the network activity, summarize your understanding of fault tolerance. | . The network operation was a very good practical method to analyze the networks of certain tens of lines and check their malfunction. Basically, fault tolerance means that in a network of many different sources and destinations, if one route goes down, there is still redundancy and the network can go from the source to the destination. There is not only one path from A to B, so if that one path goes down, A can take several paths to eventually reach B. . Parallel and Distributed Computing . Review previous lecture on Parallel Computing and watch Daily vidoe 4.3. Think of ways to make something in you team project to utilize Cores more effectively. Here are some thoughts to add to your story of Computers and Networks… . What is naturally Distributed in Frontend/Backend archeticture? . | Analyze this command in Docker: ENV GUNICORN_CMD_ARGS=&quot;--workers=1 --bind=0.0.0.0:8086&quot;. Determine if there is options are options in this command for parallel computing within the server that runs python/gunicorn. Here is an article . | . Last week we discussed parallel computing on local machine. There are many options. Here is something to get parallel computing work with a tool called Ray. . Review this article… Can you get parallel code on images to work more effectively? I have not tried Ray. | . Code example from ChatGPT using squares. This might be more interesting if nums we generated to be a lot bigger. | . import ray # define a simple function that takes a number and returns its square def square(x): return x * x # initialize Ray ray.init() # create a remote function that squares a list of numbers in parallel @ray.remote def square_list(nums): return [square(num) for num in nums] # define a list of numbers to square nums = [1, 2, 3, 4, 5] # split the list into two parts split_idx = len(nums) // 2 part1, part2 = nums[:split_idx], nums[split_idx:] # call the remote function in parallel on the two parts part1_result = square_list.remote(part1) part2_result = square_list.remote(part2) # get the results and combine them result = ray.get(part1_result) + ray.get(part2_result) # print the result print(result) .",
            "url": "https://stg-7.github.io/FastPages/2023/04/05/AP_computers_networks.html",
            "relUrl": "/2023/04/05/AP_computers_networks.html",
            "date": " • Apr 5, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "MCQ Test",
            "content": "Overall Score (49/50) . from PIL import Image overallscore = Image.open(&quot;../images/blahblah.png&quot;) display(overallscore) . Correcting Wrong Answers . from PIL import Image wrong = Image.open(&quot;../images/final22.png&quot;) display(wrong) . Why D is incorrect . While removing four links could isolate computer F from computer E, it is not the minimum number required to accomplish this. . Why C is correct . Any line between two computers represents a way for them to communicate with each other, and a communication between two computers can go through other computers. If the links from F to G, from F to A, and from F to E were broken, it would not be possible for computers E and F to communicate. .",
            "url": "https://stg-7.github.io/FastPages/2023/03/30/QuizFourBlog.html",
            "relUrl": "/2023/03/30/QuizFourBlog.html",
            "date": " • Mar 30, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Big Idea 2 Quiz Blog - Shaurya Goel",
            "content": "Overall Score 23/25 . from PIL import Image score = Image.open(&quot;../images/overall.png&quot;) display(score) . Correcting Wrong Answers . from PIL import Image wrong1 = Image.open(&quot;../images/wrong1.png&quot;) wrong2 = Image.open(&quot;../images/wrong2.png&quot;) display(wrong1) display(wrong2) . Q2 Correction . Lossless compression algorithms are guaranteed to be able to reconstruct the original data, while lossy compression algorithms are not. . Q21 Correction . Sorting by year will sort the spreadsheet on column C from least to greatest. Filtering by year will remove 21 Correctionany entries with unknown years. Filtering by photographer will remove any entries with unknown photographers. Since the order of the entries is not affected by the filters, the photograph with the lowest year value will be in the first row of the spreadsheet. .",
            "url": "https://stg-7.github.io/FastPages/2023/03/29/Idea2Quiz.html",
            "relUrl": "/2023/03/29/Idea2Quiz.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Data Structures- Hashmaps, Sets, Hash Tables, Hashing and Collisions",
            "content": "What is a Hashtable/Hashmap? . A hashtable is a data structure that with a collection of key-value pairs, where each key maps to a value, and the keys must be unique and hashable. . In Python there is a built in hashtable known as a Dictionary. | . The primary purpose of a hashtable is to provide efficient lookup, insertion, and deletion operations. When an element is to be inserted into the hashtable, a hash function is used to map the key to a specific index in the underlying array that is used to store the key-value pairs. The value is then stored at that index. When searching for a value, the hash function is used again to find the index where the value is stored. . The key advantage of a hashtable over other data structures like arrays and linked lists is its average-case time complexity for lookup, insertion, and deletion operations. . The typical time complexity of a hashtable is O(1) — a constant time. | . What is Hashing and Collision? . Hashing is the process of mapping a given key to a value in a hash table or hashmap, using a hash function. The hash function takes the key as input and produces a hash value or hash code, which is then used to determine the index in the underlying array where the value is stored. The purpose of hashing is to provide a quick and efficient way to access data, by eliminating the need to search through an entire data structure to find a value. . However, it is possible for two different keys to map to the same hash value, resulting in a collision. When a collision occurs, there are different ways to resolve it, depending on the collision resolution strategy used. . Python&#39;s dictionary implementation is optimized to handle collisions efficiently, and the performance of the dictionary is generally very good, even in the presence of collisions. However, if the number of collisions is very high, the performance of the dictionary can degrade, so it is important to choose a good hash function that minimizes collisions when designing a Python dictionary. . What is a Set? . my_set = set([1, 2, 3, 2, 1]) print(my_set) # What do you notice in the output? # The output elements are not ordered in the same way as they appeared in the original list. This is because sets are an unordered collection of elements. # The original list [1, 2, 3, 2, 1] contains duplicates (i.e., 1 and 2 are repeated). However, when the list is converted to a set using set(), the duplicates are automatically removed and only the unique elements remain. Therefore, the output set contains only the unique elements of the original list, which are 1, 2, and 3. # Why do you think Sets are in the same tech talk as Hashmaps/Hashtables? # Sets and hash tables (also known as hash maps) are related data structures in computer science because they both rely on hash functions to store and retrieve data efficiently. # Hash tables allow storage and retrieval of key-value pairs while sets are a collection of unique elements without values. . {1, 2, 3} . Dictionary Example . Below are just some basic features of a dictionary. As always, documentation is always the main source for all the full capablilties. . lover_album = { &quot;title&quot;: &quot;Lover&quot;, &quot;artist&quot;: &quot;Taylor Swift&quot;, &quot;year&quot;: 2019, &quot;genre&quot;: [&quot;Pop&quot;, &quot;Synth-pop&quot;], &quot;tracks&quot;: { 1: &quot;I Forgot That You Existed&quot;, 2: &quot;Cruel Summer&quot;, 3: &quot;Lover&quot;, 4: &quot;The Man&quot;, 5: &quot;The Archer&quot;, 6: &quot;I Think He Knows&quot;, 7: &quot;Miss Americana &amp; The Heartbreak Prince&quot;, 8: &quot;Paper Rings&quot;, 9: &quot;Cornelia Street&quot;, 10: &quot;Death By A Thousand Cuts&quot;, 11: &quot;London Boy&quot;, 12: &quot;Soon You&#39;ll Get Better (feat. Dixie Chicks)&quot;, 13: &quot;False God&quot;, 14: &quot;You Need To Calm Down&quot;, 15: &quot;Afterglow&quot;, 16: &quot;Me! (feat. Brendon Urie of Panic! At The Disco)&quot;, 17: &quot;It&#39;s Nice To Have A Friend&quot;, 18: &quot;Daylight&quot; } } # What data structures do you see? # A dictionary named lover_album which contains information about the album &quot;Lover&quot; by Taylor Swift. It has five key-value pairs. # A nested dictionary inside the tracks key of the lover_album dictionary, where each key represents the track number and its corresponding value is the track name as a string. # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}} . print(lover_album.get(&#39;tracks&#39;)) # or print(lover_album[&#39;tracks&#39;]) . {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;} {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;} . print(lover_album.get(&#39;tracks&#39;)[4]) # or print(lover_album[&#39;tracks&#39;][4]) . The Man The Man . lover_album[&quot;producer&quot;] = [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] # What can you change to make sure there are no duplicate producers? # Use a set to remove duplicates. The set() function to convert the list of producers to a set, which automatically removes duplicates. Then we convert it back to a list before assigning it to the producer key in the lover_album dictionary. # Check for duplicates before adding to the list. we iterate through the list of producers and check if each producer is already in the unique_producers list. If it is not, we add it to the list. Finally, we assign the unique_producers list to the producer key in the lover_album dictionary. # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . Solution 1 - Making it a Set . In this solution, we use the set() function to convert the list of producers to a set, which automatically removes duplicates. Then we convert it back to a list before assigning it to the producer key in the lover_album dictionary. . lover_album[&quot;producer&quot;] = list(set([&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;])) print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}, &#39;producer&#39;: [&#39;Jack Antonoff&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;, &#39;Taylor Swift&#39;, &#39;Joel Little&#39;]} . Solution 2 - Checking for duplicates before adding to the list . In this solution, we iterate through the list of producers and check if each producer is already in the unique_producers list. If it is not, we add it to the list. Finally, we assign the unique_producers list to the producer key in the lover_album dictionary. . producers = [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] unique_producers = [] for producer in producers: if producer not in unique_producers: unique_producers.append(producer) lover_album[&quot;producer&quot;] = unique_producers print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . lover_album[&quot;tracks&quot;].update({19: &quot;All Of The Girls You Loved Before&quot;}) # How would add an additional genre to the dictionary, like electropop? # You can use the append() method # You can redefine the list with electropop # Printing the dictionary print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . Solution 1 - Append() Method . lover_album[&quot;genre&quot;].append(&quot;electropop&quot;) print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;Pop&#39;, &#39;Synth-pop&#39;, &#39;electropop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . Solution 2 - Redefinition . lover_album[&quot;genre&quot;] = [&quot;pop&quot;, &quot;electropop&quot;] print(lover_album) . {&#39;title&#39;: &#39;Lover&#39;, &#39;artist&#39;: &#39;Taylor Swift&#39;, &#39;year&#39;: 2019, &#39;genre&#39;: [&#39;pop&#39;, &#39;electropop&#39;], &#39;tracks&#39;: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;}, &#39;producer&#39;: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;]} . for k,v in lover_album.items(): # iterate using a for loop for key and value print(str(k) + &quot;: &quot; + str(v)) # Write your own code to print tracks in readable format . title: Lover artist: Taylor Swift year: 2019 genre: [&#39;Pop&#39;, &#39;Synth-pop&#39;] tracks: {1: &#39;I Forgot That You Existed&#39;, 2: &#39;Cruel Summer&#39;, 3: &#39;Lover&#39;, 4: &#39;The Man&#39;, 5: &#39;The Archer&#39;, 6: &#39;I Think He Knows&#39;, 7: &#39;Miss Americana &amp; The Heartbreak Prince&#39;, 8: &#39;Paper Rings&#39;, 9: &#39;Cornelia Street&#39;, 10: &#39;Death By A Thousand Cuts&#39;, 11: &#39;London Boy&#39;, 12: &#34;Soon You&#39;ll Get Better (feat. Dixie Chicks)&#34;, 13: &#39;False God&#39;, 14: &#39;You Need To Calm Down&#39;, 15: &#39;Afterglow&#39;, 16: &#39;Me! (feat. Brendon Urie of Panic! At The Disco)&#39;, 17: &#34;It&#39;s Nice To Have A Friend&#34;, 18: &#39;Daylight&#39;, 19: &#39;All Of The Girls You Loved Before&#39;} producer: [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] . Solution 1 . Using a for loop to iterate over the dictionary&#39;s &quot;tracks&quot; key and value pairs . print(&quot;Tracks:&quot;) for track_number, track_name in lover_album[&quot;tracks&quot;].items(): print(str(track_number) + &quot;. &quot; + track_name) . Tracks: 1. I Forgot That You Existed 2. Cruel Summer 3. Lover 4. The Man 5. The Archer 6. I Think He Knows 7. Miss Americana &amp; The Heartbreak Prince 8. Paper Rings 9. Cornelia Street 10. Death By A Thousand Cuts 11. London Boy 12. Soon You&#39;ll Get Better (feat. Dixie Chicks) 13. False God 14. You Need To Calm Down 15. Afterglow 16. Me! (feat. Brendon Urie of Panic! At The Disco) 17. It&#39;s Nice To Have A Friend 18. Daylight 19. All Of The Girls You Loved Before . Solution 2 . Using a list comprehension to create a list of formatted track names, then printing the list using the join method . tracks_list = [f&quot;{num}. {track}&quot; for num, track in lover_album[&quot;tracks&quot;].items()] print(&quot;Tracks: n&quot; + &quot; n&quot;.join(tracks_list)) . Tracks: 1. I Forgot That You Existed 2. Cruel Summer 3. Lover 4. The Man 5. The Archer 6. I Think He Knows 7. Miss Americana &amp; The Heartbreak Prince 8. Paper Rings 9. Cornelia Street 10. Death By A Thousand Cuts 11. London Boy 12. Soon You&#39;ll Get Better (feat. Dixie Chicks) 13. False God 14. You Need To Calm Down 15. Afterglow 16. Me! (feat. Brendon Urie of Panic! At The Disco) 17. It&#39;s Nice To Have A Friend 18. Daylight 19. All Of The Girls You Loved Before . def search(): search = input(&quot;What would you like to know about the album?&quot;) if lover_album.get(search.lower()) == None: print(&quot;Invalid Search&quot;) else: print(lover_album.get(search.lower())) search() # This is a very basic code segment, how can you improve upon this code? . Lover . Solution 1 - Input validation . Currently, the code does not check if the user input is valid or not. A user can enter anything, and the code will try to look up that key in the dictionary, which may not exist. To improve this, we can add input validation to ensure that the user inputs a valid key. . def search(): while True: search = input(&quot;What would you like to know about the album?&quot;) if search.lower() not in lover_album: print(&quot;Invalid search term. Please try again.&quot;) else: print(lover_album[search.lower()]) break search() . Lover . Solution 2 - Using .get() with a default value . Currently, the code checks if a key exists in the dictionary using an if statement. An alternative approach is to use the .get() method with a default value. This method returns the value associated with the key if it exists, and a default value (in this case, &quot;Invalid Search&quot;) if it doesn&#39;t. . def search(): search = input(&quot;What would you like to know about the album?&quot;) print(lover_album.get(search.lower(), &quot;Invalid Search&quot;)) search() . [&#39;pop&#39;, &#39;electropop&#39;] . Possible Improvements for this Code . Hacks . Answer ALL questions in the code segments | Create a diagram or comparison illustration (Canva). What are the pro and cons of using this data structure? | Dictionary vs List | . | Expand upon the code given to you, possible improvements in comments | Build your own album showing features of a python dictionary . | For Mr. Yeung&#39;s class: Justify your favorite Taylor Swift song, answer may effect seed . | . Diagram of List vs Dictionary Comparison . from PIL import Image VennDiagram = Image.open(&quot;../images/importantpic.png&quot;) display(VennDiagram) . My album showing features of a python dictionary . football_album = { &quot;title&quot;: &quot;Gridiron Glory&quot;, &quot;artist&quot;: &quot;The Touchdowns&quot;, &quot;year&quot;: 2022, &quot;genre&quot;: [&quot;Rock&quot;, &quot;Country&quot;, &quot;Hip Hop&quot;], &quot;tracks&quot;: { 1: &quot;Kickoff&quot;, 2: &quot;Huddle Up&quot;, 3: &quot;Run It In&quot;, 4: &quot;Passing Game (feat. QB1)&quot;, 5: &quot;Sack Attack&quot;, 6: &quot;Punt Return&quot;, 7: &quot;Two Minute Warning&quot;, 8: &quot;Halftime Show&quot;, 9: &quot;Fourth Down Conversion&quot;, 10: &quot;Touchdown Celebration&quot;, 11: &quot;Field Goal (feat. Special Teams)&quot;, 12: &quot;Challenge Flag&quot;, 13: &quot;Overtime Thriller&quot;, 14: &quot;Victory Formation&quot;, 15: &quot;Championship Parade&quot;, } } . Explanation of the Code . In this example, we have an album titled &quot;Gridiron Glory&quot; by a band called &quot;The Touchdowns&quot;. The album was released in 2022 and features a mix of rock, country, and hip hop genres. The tracks section lists out 15 different football-related songs, such as &quot;Kickoff&quot;, &quot;Sack Attack&quot;, and &quot;Field Goal&quot;. Each song is numbered and has a corresponding title, with some featuring special guests like the starting quarterback (&quot;Passing Game&quot;) or the special teams unit (&quot;Field Goal&quot;). . This dictionary could be used to store information about the album for display on a website, in a music player app, or for other purposes related to managing and organizing music data. . My favorite Taylor Swift Song - Look What You Made Me Do . Here are my reasons for &quot;Look What You Made Me Do&quot; being my favorite Taylor Swift song: . Catchy melody: The song features a catchy and memorable melody that sticks in your head after listening to it. The chorus, in particular, is very catchy and has a sing-along quality to it. . Lyrics: The song&#39;s lyrics are relatable and empowering. They speak to the idea of taking control of your own narrative and not letting others define you or bring you down. . Unique sound: &quot;Look What You Made Me Do&quot; has a unique sound compared to other Taylor Swift songs. It incorporates elements of pop, electropop, and even some hip hop, which creates a distinctive sound that sets it apart from her other work. . Music video: The song&#39;s music video is visually stunning and features a lot of symbolism and hidden meanings. It&#39;s a very well-produced and thought-provoking video that adds another layer of depth to the song. .",
            "url": "https://stg-7.github.io/FastPages/2023/03/29/DS-hashmaps.html",
            "relUrl": "/2023/03/29/DS-hashmaps.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "STEM at CSUSM Extra Credit Blog (Part 2) - Shaurya Goel",
            "content": "Research at CSUSM . Cancer Cell Research . The research projects in the Cancer Cell Research program are often interdisciplinary and may involve molecular biology, biochemistry, genetics, and other fields. Students in the program may work on projects such as identifying novel cancer biomarkers, developing new cancer therapies, or investigating the underlying mechanisms of cancer growth and metastasis. . Students in the program have the opportunity to work closely with faculty members and gain hands-on research experience. They may also have the opportunity to present their research at conferences or publish their findings in scientific journals. . Overall, the Cancer Cell Research program at CSUSM provides students with an opportunity to make meaningful contributions to the field of cancer research while gaining valuable research skills and experience. . Materials Resarch . The program aims to advance our understanding of the fundamental principles governing the behavior of materials and to develop new materials with desirable properties for a wide range of applications. Research projects in the program may involve the synthesis and characterization of new materials, the investigation of the structure-property relationships of materials, or the development of new techniques for materials analysis. . Students in the Materials Research program have the opportunity to work closely with faculty members and gain hands-on research experience. They may also have the opportunity to present their research at conferences or publish their findings in scientific journals. . Artifical Intelligence Research . The program aims to advance our understanding of AI and to develop new AI techniques and applications that can address real-world problems. Research projects in the program may involve machine learning, natural language processing, computer vision, robotics, or other AI-related topics. . Students in the AI Research program have the opportunity to work closely with faculty members and gain hands-on research experience. They may also have the opportunity to present their research at conferences or publish their findings in scientific journals. . The AI Research program at CSUSM also collaborates with industry partners to provide students with real-world experience in AI. For example, students may have the opportunity to work on AI projects for local companies or participate in internships with AI-focused organizations. . Overall, the AI Research program at CSUSM provides students with an opportunity to make meaningful contributions to the field of artificial intelligence while gaining valuable research skills and experience. Graduates from the program may go on to pursue careers in AI, data science, or related fields or continue their education in graduate programs in AI or related disciplines. . Other Researches . Studying Metgorities | Ecologyst Researchers | . from PIL import Image AI = Image.open(&quot;../images/ai.jpg&quot;) display(AI) . Scholarships and Grants . Question: What is the difference between a Grant and a Scholarship? Answer: Scholarship is privatley funded whereas grant is government funded. . Apply for FAFSA, student gov. | Check student email for scholarhsip opportunities sent by the school/your | Google is your best friend | . Life After CSUSM . After graduating, many people start workign in private industries and for the man&#39;s case he got an internship in Safari Park | Some people go into graduate school. | Higher Pay Rise to get a Masters Degree, and some companies will pay computer scientists to get a Masters Degree | Some Universities will pay for PHD and maybe even Masters Degree | . Reflection . In conclusion, I gained a lot of knowledge about Cal States in general and Cal State San Marcos in particular. I also gained a lot of knowledge about how college financing functions. Many people gave me advice on how to avoid using loans, or if I did, they stressed the need of using subsidized loans because they will have a smaller impact in the long run. They also provided us with advice on how to apply for scholarships in various ways. I also learnt about the several clubs and programs that Cal State San Marcos offers, as well as the different majors that I can choose from. . John, the individual giving the presentation, also discussed how being Mexican or Mexican-American led to his receiving scholarships. While diversity is becoming more and more important in today&#39;s societies to help establish a diverse college environment, this can also benefit me. As is the case for the majority of college students, he was able to transfer from a community college to Cal State San Marcos and pay off all of his loans before the end of his senior year. We also discussed how to transfer across universities. . They discussed how each department would have its own set of requirements for admission as well as specific departments within each department. If I attended the school, I would learn more about the CyberSecurity Club because it sounds fascinating and I have experience with it in the past, which would help me feel more at home. If I attended the school, I&#39;d probably enroll in a course in computer engineering, information sciences, or software engineering. . As cyber security is crucial for the globe and because it seems like a lot of fun, I could also give it a try. This is especially true in the modern world, where the majority of information is being saved online. The future of protecting information and ideology is data protection. .",
            "url": "https://stg-7.github.io/FastPages/2023/03/28/ExtraCreditPart2.html",
            "relUrl": "/2023/03/28/ExtraCreditPart2.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "STEM at CSUSM Extra Credit Blog - Shaurya Goel",
            "content": "Introduction . Today&#39;s speakers came California State University San Marcos (CSUSM), they work in the STEM field, more particularly in Computer Science. . About CSUSM and their Computer Science Program . California State University San Marcos (CSUSM) is a public university located in San Marcos, California, United States. It was founded in 1989 and is part of the California State University system. . CSUSM offers a Computer Science program that provides students with a solid foundation in computer science theory, software engineering, and computer hardware. The program aims to prepare students for careers in software engineering, computer programming, and other related fields. . The Computer Science program at CSUSM offers several degree options, including a Bachelor of Science in Computer Science, a Bachelor of Science in Computer Information Systems, and a Master of Science in Computer Science. . The Bachelor of Science in Computer Science program is designed to prepare students for a wide range of careers in computer science. The program offers courses in computer programming, data structures and algorithms, software engineering, computer networks, and database systems. Students also have the opportunity to specialize in areas such as artificial intelligence, cybersecurity, and mobile app development. . The Bachelor of Science in Computer Information Systems program focuses on the use of computer technology in business and other organizations. The program offers courses in database systems, networking, web development, and project management. . The Master of Science in Computer Science program is designed for students who want to pursue advanced study in computer science. The program offers courses in areas such as machine learning, data mining, computer graphics, and software engineering. . Overall, CSUSM&#39;s Computer Science program provides students with a strong foundation in computer science theory and practical skills that prepare them for a variety of careers in the field. . from PIL import Image SanMarcosPic1 = Image.open(&quot;../images/Sanmarcos.jpg&quot;) SanMarcosPic2 = Image.open(&quot;../images/Sanmarcos2.jpg&quot;) display(SanMarcosPic1) display(SanMarcosPic2) . Backgrounds of the Speakers . We were accompanied by two speakers, one man and one woman. They both had unique backgrounds leading up to their current situation in STEM. . Woman . Struggles: . Got a D in her first trimester of AP Physics | Didn&#39;t have much guidance or exposure in STEM | Failed multiple STEM courses including Calculus | . Steps to Success: . Never gave up, despite her failiures | Since she was interested in the STEM field, she pursued her career rather than being discouraged | Entered CSUSM where she was able to work and explore different careers in STEM | Got into reasearch for a lab that she was working on and which made her start her PHD | . Man . Struggles . Deliquent in High School | Didn&#39;t care about school at all growing up | . Steps to Success: . After College entered Palomar College, got two associate degrees, one of them being in computer science | Pursued Computer Science degree and didn&#39;t spend too much time on campus | Finished the bacholer&#39;s degree, and used the degree to it&#39;s advantage as it is very versatile (can be used in multiple fields) | . from PIL import Image PalomarCS = Image.open(&quot;../images/palomar.jpg&quot;) display(PalomarCS) . More Information about CSUSM and the Speaker&#39;s Experiences There . Different Pathways . Chemistry | BioChemistry | Physics | Biology | Multiple different Computer Science Majors (Listed in the first part of the page) | Algoirthmic Coding | Electrical Engineering | Software Engineering | Mechanical Engineering is a masters degree option after finishing Applied Physics | Computer Engineering | Computer Information Sciences | Cybersecurity (New) | . Different Departments . Physics | Chemistry and biochemistry | Biotehnology | Biological Sciences | Software Engineering | Electrical Engineering | Math | Biotechnology | . Differnet Clubs . CyberSecurity Club (Also in DNHS) | Robotics CLub (Also in DNHS) | 3D Printing CLub | Women in STEM (Also in DNHS) | Society of Women Engineers | Society of Physics Students | National Society of Black Engineers | cStem - empowering LGBTQ+ in STEM | . from PIL import Image CSUSM = Image.open(&quot;../images/CSUSM.jpg&quot;) display(CSUSM) . Programs at CSUSM . Summer Scholars Program: . The Summer Scholars Program at California State University San Marcos (CSUSM) is a six-week program designed for high-achieving high school juniors and seniors who are interested in exploring college-level academic courses and gaining valuable college experience. . During the program, students take two college-level courses, one in the morning and one in the afternoon, for a total of six units of college credit. Courses are taught by experienced CSUSM faculty members and cover a wide range of academic disciplines, including biology, chemistry, psychology, business, and more. . In addition to the academic coursework, students participate in a variety of extracurricular activities and events, including guest lectures, workshops, and field trips. These activities are designed to help students develop important skills such as critical thinking, communication, and leadership. . The program also provides students with opportunities to meet and interact with other high-achieving students from diverse backgrounds, as well as with CSUSM faculty, staff, and current students. . To be eligible for the Summer Scholars Program, students must have a minimum GPA of 3.0 and be in good academic standing at their high school. The program is open to students from all backgrounds, including first-generation college students and students from underrepresented communities. . Full-time stripend is $6,000 while part-time stripend at $3,000. | . Quantam Bridge Progarm: . 4 week program | . Quantum bridge programs typically aim to prepare undergraduate students for graduate studies or careers in the field of quantum science and technology. These programs often include coursework in quantum mechanics, quantum information science, and related fields, as well as research opportunities with faculty members or industry partners. . Some quantum bridge programs may also offer additional support, such as mentorship and networking opportunities, to help students navigate the transition from undergraduate to graduate studies or the workforce. The goal is to help students gain a deeper understanding of quantum science and technology, as well as the skills and knowledge needed to succeed in these fields. . from PIL import Image SummerScholars = Image.open(&quot;../images/summerprogram.png&quot;) Summer2 = Image.open(&quot;../images/summer2.png&quot;) display(SummerScholars) display(Summer2) . Research at CSUSM . Cancer Cell Research . The research projects in the Cancer Cell Research program are often interdisciplinary and may involve molecular biology, biochemistry, genetics, and other fields. Students in the program may work on projects such as identifying novel cancer biomarkers, developing new cancer therapies, or investigating the underlying mechanisms of cancer growth and metastasis. . Students in the program have the opportunity to work closely with faculty members and gain hands-on research experience. They may also have the opportunity to present their research at conferences or publish their findings in scientific journals. . Overall, the Cancer Cell Research program at CSUSM provides students with an opportunity to make meaningful contributions to the field of cancer research while gaining valuable research skills and experience. . Materials Resarch . The program aims to advance our understanding of the fundamental principles governing the behavior of materials and to develop new materials with desirable properties for a wide range of applications. Research projects in the program may involve the synthesis and characterization of new materials, the investigation of the structure-property relationships of materials, or the development of new techniques for materials analysis. . Students in the Materials Research program have the opportunity to work closely with faculty members and gain hands-on research experience. They may also have the opportunity to present their research at conferences or publish their findings in scientific journals. . Artifical Intelligence Research . The program aims to advance our understanding of AI and to develop new AI techniques and applications that can address real-world problems. Research projects in the program may involve machine learning, natural language processing, computer vision, robotics, or other AI-related topics. . Students in the AI Research program have the opportunity to work closely with faculty members and gain hands-on research experience. They may also have the opportunity to present their research at conferences or publish their findings in scientific journals. . The AI Research program at CSUSM also collaborates with industry partners to provide students with real-world experience in AI. For example, students may have the opportunity to work on AI projects for local companies or participate in internships with AI-focused organizations. . Overall, the AI Research program at CSUSM provides students with an opportunity to make meaningful contributions to the field of artificial intelligence while gaining valuable research skills and experience. Graduates from the program may go on to pursue careers in AI, data science, or related fields or continue their education in graduate programs in AI or related disciplines. . Other Researches . Studying Metgorities | Ecologyst Researchers | . Scholarships and Grants . Question: What is the difference between a Grant and a Scholarship? Answer: Scholarship is privatley funded whereas grant is government funded. . Apply for FAFSA, student gov. | Check student email for scholarhsip opportunities sent by the school/your | Google is your best friend | . Life After CSUSM . After graduating, many people start workign in private industries and for the man&#39;s case he got an internship in Safari Park | Some people go into graduate school. | Higher Pay Rise to get a Masters Degree, and some companies will pay computer scientists to get a Masters Degree | Some Universities will pay for PHD and maybe even Masters Degree | . Reflection . In conclusion, I gained a lot of knowledge about Cal States in general and Cal State San Marcos in particular. I also gained a lot of knowledge about how college financing functions. Many people gave me advice on how to avoid using loans, or if I did, they stressed the need of using subsidized loans because they will have a smaller impact in the long run. They also provided us with advice on how to apply for scholarships in various ways. I also learnt about the several clubs and programs that Cal State San Marcos offers, as well as the different majors that I can choose from. . John, the individual giving the presentation, also discussed how being Mexican or Mexican-American led to his receiving scholarships. While diversity is becoming more and more important in today&#39;s societies to help establish a diverse college environment, this can also benefit me. As is the case for the majority of college students, he was able to transfer from a community college to Cal State San Marcos and pay off all of his loans before the end of his senior year. We also discussed how to transfer across universities. . They discussed how each department would have its own set of requirements for admission as well as specific departments within each department. If I attended the school, I would learn more about the CyberSecurity Club because it sounds fascinating and I have experience with it in the past, which would help me feel more at home. If I attended the school, I&#39;d probably enroll in a course in computer engineering, information sciences, or software engineering. . I might also try CyberSecurity because it is importnat for the world and it seems kinda fun and important especially in todays world where a lot if not most of the infromation is getting stored on the internet. Data Protection is the future of keeping information and ideologies safe. .",
            "url": "https://stg-7.github.io/FastPages/2023/03/28/ExtraCredit.html",
            "relUrl": "/2023/03/28/ExtraCredit.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Data Structures- Space and Time Complexity",
            "content": "Hacks . Record your findings when testing the time elapsed of the different algorithms. . Each algorithm took a different amount of time to test. Some of these algorithms would have broken my computer if they hadn&#39;t been stopped. . Although we will go more in depth later, time complexity is a key concept that relates to the different sorting algorithms. Do some basic research on the different types of sorting algorithms and their time complexity. . There are many sorting algorithms and each is more efficient than the other. Some sorting algorithms include insertion sort, bubble sort, selection sort, merge sort, bulk sort and quick sort algorithm. Out of these 6, the 3 most efficient sorting algorithms are merge sort, bulk sort and quick sort. . Why is time and space complexity important when choosing an algorithm? . Time complexity is important when choosing an algorithm because you want an algorithm that can be easily run without taking too much time to produce results. Spatial complexity is also important because you need an algorithm that can handle large amounts of data. . Should you always use a constant time algorithm / Should you never use an exponential time algorithm? Explain? . Constant time algorithms can be good most of the time, but they should not always be used, as there may be algorithms that can take even less time. I would almost never use an exponential time algorithm because they are almost always incredibly inefficient. For 512 inputs, the linear algorithm can take 512 seconds, while the exponential algorithm takes 1.34 x 10^154 seconds. . What are some general patterns that you noticed to determine each algorithm’s time and space complexity . Time complexity is essentially determined by how long an algorithm takes depending on the number of inputs to the algorithm. The space complexity is defined by f(N), where N is the size of the input data. . Complete the Time and Space Complexity analysis questions linked below. Practice . Finished .",
            "url": "https://stg-7.github.io/FastPages/2023/03/27/DataComplexityHACKS.html",
            "relUrl": "/2023/03/27/DataComplexityHACKS.html",
            "date": " • Mar 27, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "CPT Plans 3/27",
            "content": "What is Done . Backend Developement | Frontend Developement | Overall Completion | Meeting college board requirements | . What Needs to be Completed . Make sure it is unique using a different data structure (doing this trimester) | Finish the Blog Part of the submission | Make sure it is submissable to College Board (Finalize) | . Remember: Figure out if College Board requires it to be deployed on AWS. If not, then use local fetch link. .",
            "url": "https://stg-7.github.io/FastPages/markdown/2023/03/27/CPTPlans.html",
            "relUrl": "/markdown/2023/03/27/CPTPlans.html",
            "date": " • Mar 27, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "This page shows theme toggle",
            "content": "Hacks Part 2 . . Toggle Theme",
            "url": "https://stg-7.github.io/FastPages/2023/03/22/theme-toggle.html",
            "relUrl": "/2023/03/22/theme-toggle.html",
            "date": " • Mar 22, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . Schema is essentially the category/column of a table. . What is the purpose of identity Column in SQL database? | . The purpose of an identity Column in a SQL database is to help us know what the rest of the column is about, what kinds of data types it will contain, and any other relevant information. . What is the purpose of a primary key in SQL database? | . A primary key is something that is used to identify someone. The primary key (i.e. id) should be unique to each user so that it is easy to tell who is who. . What are the Data Types in SQL table? | . Integers, structures (lists, dictionaries, etc.), strings, floats, and many more. . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() # varchar = string # 255 = max length . OperationalError Traceback (most recent call last) /home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb Cell 4 in &lt;cell line: 23&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; # Close the database connection &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=20&#39;&gt;21&lt;/a&gt; conn.close() &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=22&#39;&gt;23&lt;/a&gt; schema() /home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb Cell 4 in schema() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; def schema(): &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; # Connect to the database file -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; conn = sqlite3.connect(database) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; # Create a cursor object to execute SQL queries &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X45sdnNjb2RlLXJlbW90ZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; cursor = conn.cursor() OperationalError: unable to open database file . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? | . A connection object is an object that is created using the sqlite3.connect() method to connect to a SQLite database. It represents a connection to a database file and provides methods to execute SQL commands and interact with the database. After looking it up, I think that the connection object acts like a network connection by functioning as a connection to the database. . Same for cursor object? | . The cursor object is used to execute SQL commands and fetch data from the database. It acts as a pointer to a specific row or a set of rows in the database. . The cursor object allows the application to execute SQL commands and retrieve data from the database by providing methods such as execute() and fetchall(). The execute() method is used to execute an SQL command and the fetchall() method is used to fetch all the data retrieved from the database. . Look at conn object and cursor object in VSCode debugger. What attributes are in the object? | . For the conn object, I see that some of its attributes include in_transaction, isolation_level, and row_factory. For the cursor object, I see that some of its attributes include arraysize, lastrowid, row_factory, and rowcount. . Is &quot;results&quot; an object? How do you know? | . Yes, &quot;results&quot; is an object because it not only appears under the the list of local variables, but it also includes data used as a part of the functionality of the program. It includes the attributes of each user, such as their name, their uid, and their date of birth. . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . OperationalError Traceback (most recent call last) /home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb Cell 6 in &lt;cell line: 24&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=20&#39;&gt;21&lt;/a&gt; cursor.close() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=21&#39;&gt;22&lt;/a&gt; conn.close() &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=23&#39;&gt;24&lt;/a&gt; read() /home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb Cell 6 in read() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; def read(): &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; # Connect to the database file -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; conn = sqlite3.connect(database) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; # Create a cursor object to execute SQL queries &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/shaurya/FastPages/_notebooks/2023-03-16-AP-unit2-4b.ipynb#X50sdnNjb2RlLXJlbW90ZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; cursor = conn.cursor() OperationalError: unable to open database file . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compare create() in both SQL lessons. What is better or worse in the two implementations? | . The create() function in the OOP was called on an object. The imperative version involves creating numerous variables within the function rather than the objects. Both of these have their own pros and cons. The imperative version is less error prone, but also less efficient. The converse is true for the create() in the OOP version. Imperative version does not censor your password. Using OOP might be easier if one is trying to work with large amounts of data. If one is trying to work with a small amount of data, imperative might work better. . Explain purpose of SQL INSERT. Is this the same as User init? | . The purpose of the SQL INSERT statement in this code is to insert a new row of data into the &quot;users&quot; table of a SQLite database. The INSERT INTO statement specifies the name of the table and the columns where the data should be inserted, and the VALUES clause provides the values to be inserted into those columns. The ? placeholders are used to prevent SQL injection attacks by sanitizing user input. . The INSERT INTO statement in this code is similar to the init method of a User class in that both are used to create a new record or object in the database. However, there are some differences. The INSERT INTO statement only inserts data into a table in the database, while the init method of a User class creates a new instance of a class in memory. . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | . The &quot;hacked&quot; part in the code is meant to provide a password that meets the minimum length requirement (2 characters) for security purposes. The message variable is set to &quot;hacked&quot; in this case to indicate that the password was automatically set. . Explain try/except, when would except occur? | . The try/except block is used to handle exceptions that may occur during the execution of the SQL command. In this case, the try block contains the SQL command to update the password for the specified user, and the except block catches any sqlite3. Error exceptions that might be raised during the execution of the command. If an exception occurs, the code inside the except block is executed. . What code seems to be repeated in each of these examples to point, why is it repeated? | . The code that connects to the database and creates a cursor object is repeated in each of these examples. This is because it is necessary to establish a connection to the database in order to execute SQL commands. The cursor object is used to execute the SQL commands and interact with the database. Once the SQL commands have been executed, the cursor and connection objects need to be closed to free up resources and prevent memory leaks. . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | . DELETE can be a dangerous operation if used carelessly as it permanently removes data from the database, and if it is used with caution, it can result in unintended data loss or corruption. . In the print statemements, what is the &quot;f&quot; and what does {uid} do? | . The &quot;f&quot; before the string is used for f-strings, which are a way of formatting strings that allows you to include the values of variables directly in the string. The curly braces {} surrounding uid indicate that the value of the uid variable should be inserted at that position in the string. This provides a much easier alternative than .format() . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | . The menu repeats so that if the user would like to perform multiple operations in one sitting (create and red for example), they can do so. They can perform as many operations as they would like until they don&#39;t input anything or make the program exit. . Could you refactor this menu? Make it work with a List? | . Yes, I could refactor this menu with a list, such as perhaps using list comprehension in Python. . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . A new user record idc has been created (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;price&#39;, &#39;FLOAT&#39;, 1, None, 0) (3, &#39;release_date&#39;, &#39;DATE&#39;, 1, None, 0) (4, &#39;developer&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (5, &#39;publisher&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . Reference... sqlite documentation . Procedural Abstraction Question . Recalling the College Board criteria, procedural abstraction refers to the concept of breaking down a program into a set of code blocks or functions that perform specific tasks. These procedures or functions can be called from various parts of the program as needed, without the calling code having to know the internal details of how the function works. I can see procedural abstraction being used in this implementation, as there are separate functions for creating, reading, updating, and deleting user records in the database. The menu function acts as a controller that allows the user to choose which operation they want to perform. For example, in the create() function, it prompts the user to enter the required details, connects to the database, creates a cursor object, executes an SQL command to insert the data into the database, and then closes the cursor and connection objects. This entire process occurs by calling the create() function. Overall, since there are multiple functions with specific tasks included in this implementation, there is definitely procedural abstraction being used here. . Data Abstraction Question . Recalling the College Board criteria, data abstraction is essentially representing something (i.e a program) in a much more simplified, condensed method while hiding its more internal functions. Looking at this implementation, I do see data abstraction in this implementation. The implementation hides the details of the underlying database operations from the user, providing a simple interface for performing basic CRUD (Create, Read, Update, Delete) operations on their data. The user interacts with the program through a menu system, which hides the implementation details from the user and provides an abstraction of the available operations. . For example, when the user selects the &quot;create&quot; operation from the menu, they are prompted for the necessary information (name, uid, password, dob), and the implementation takes care of inserting this information into the database. . Regarding debugging, one possible example is if the user enters invalid input (e.g., a non-existent uid when updating or deleting a user). In this case, the implementation catches the exception raised by the database operation and prints an error message to the user. The error message provides a high-level explanation of the problem (&quot;No uid was found in the table&quot;), without revealing the underlying implementation details. This is an example of data abstraction, as the implementation is hiding the details of the database operation (in this case, the SQL query) from the user and providing a simplified, high-level interface for working with the data. . Debugging Screenshots . from PIL import Image debug = Image.open(&#39;../images/attributes.png&#39;) debug1 = Image.open(&#39;../images/conncursor.png&#39;) display(debug) display(debug1) . Debugging Screenshots Analysis . In the first screenshot, I showed an example of what the code does if I choose the create operation (&#39;C&#39;). As you can see, when I am in debug mode, on the bottom left, you can see what I typed in for each of the different attributes, such as the date of birth, my password, and some of the other attributes. As I was doing that, the debugger highlighted what part of the code block was being executed in that moment, which allowed me to have a greater understand of what code does as it is being ran. In addition, as I step into more and more, you can see that the objects conn and cursor appear on the top left as well. The attributes for each of those objects can also be seen as well. Overall, playing around with the debugging provided me with a much better and more thorough understanding of how we are able to run and execute code so that it fulfills its purpose of providing us with the desired output. . My Own Imperative-Style SQlite Program . Schema . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;games&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() # varchar = string # 255 = max length . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;price&#39;, &#39;FLOAT&#39;, 1, None, 0) (3, &#39;release_date&#39;, &#39;DATE&#39;, 1, None, 0) (4, &#39;developer&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (5, &#39;publisher&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) . Create . import sqlite3 def create(): name = input(&quot;Enter the name of your game:&quot;) price = input(&quot;Enter the price of your game:&quot;) release_date = input(&quot;Enter the date your game was (or is to be) released (YYYY-MM-DD)&quot;) developer = input(&quot;Enter the developer of your game&quot;) publisher = input(&quot;Enter the publisher of your game&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO games (name, price, release_date, developer, publisher) VALUES (?, ?, ?, ?, ?)&quot;, (name, price, release_date, developer, publisher)) # Commit the changes to the database conn.commit() print(f&quot;A new game record {name} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . A new game record Smash Bros Ultimate has been created . Read . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM games&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() #read() . (1, &#39;Mario Party 9&#39;, 169.0, &#39;2012-02-03&#39;, &#39;NDcube&#39;, &#39;Nintendo&#39;) (2, &#39;Legend of Zelda: Tears of the Kingdom&#39;, 69.99, &#39;2023-05-12&#39;, &#39;Nintendo Entertaining Planning and Development&#39;, &#39;Nintendo&#39;) (3, &#39;Smash Bros Ultimate&#39;, 59.88, &#39;2018-12-07&#39;, &#39;Masahiro Sakurai&#39;, &#39;Nintendo&#39;) . Update . import sqlite3 def update(): name = input(&quot;Enter name to update&quot;) price = input(&quot;Enter updated price&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete . import sqlite3 def delete(): name = input(&quot;Enter the name of the game to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM games WHERE name = ?&quot;, (name,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {name} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with name {name} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . (1, &#39;Mario Party 9&#39;, 169.0, &#39;2012-02-03&#39;, &#39;NDcube&#39;, &#39;Nintendo&#39;) (2, &#39;Legend of Zelda: Tears of the Kingdom&#39;, 69.99, &#39;2023-05-12&#39;, &#39;Nintendo Entertaining Planning and Development&#39;, &#39;Nintendo&#39;) (4, &#39;Super Mario 3D Land&#39;, 34.45, &#39;2011-11-03&#39;, &#39;1-Up Studio&#39;, &#39;Nintendo&#39;) (6, &#39;Smash Ultimate&#39;, 59.99, &#39;2018-12-07&#39;, &#39;Masahiro Sakurai&#39;, &#39;Nintendo&#39;) A new game record Wii Party has been created (1, &#39;Mario Party 9&#39;, 169.0, &#39;2012-02-03&#39;, &#39;NDcube&#39;, &#39;Nintendo&#39;) (2, &#39;Legend of Zelda: Tears of the Kingdom&#39;, 69.99, &#39;2023-05-12&#39;, &#39;Nintendo Entertaining Planning and Development&#39;, &#39;Nintendo&#39;) (4, &#39;Super Mario 3D Land&#39;, 34.45, &#39;2011-11-03&#39;, &#39;1-Up Studio&#39;, &#39;Nintendo&#39;) (6, &#39;Smash Ultimate&#39;, 59.99, &#39;2018-12-07&#39;, &#39;Masahiro Sakurai&#39;, &#39;Nintendo&#39;) (7, &#39;Wii Party&#39;, 39.99, &#39;2010-07-08&#39;, &#39;NDcube&#39;, &#39;Nintendo&#39;) The row with name Smash Ultimate was successfully deleted (1, &#39;Mario Party 9&#39;, 169.0, &#39;2012-02-03&#39;, &#39;NDcube&#39;, &#39;Nintendo&#39;) (2, &#39;Legend of Zelda: Tears of the Kingdom&#39;, 69.99, &#39;2023-05-12&#39;, &#39;Nintendo Entertaining Planning and Development&#39;, &#39;Nintendo&#39;) (4, &#39;Super Mario 3D Land&#39;, 34.45, &#39;2011-11-03&#39;, &#39;1-Up Studio&#39;, &#39;Nintendo&#39;) (7, &#39;Wii Party&#39;, 39.99, &#39;2010-07-08&#39;, &#39;NDcube&#39;, &#39;Nintendo&#39;) .",
            "url": "https://stg-7.github.io/FastPages/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of databaseapp.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . /root/anaconda3/lib/python3.9/site-packages/flask_sqlalchemy/__init__.py:872: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future. Set it to True or False to suppress this warning. warnings.warn(FSADeprecationWarning( . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User The class that manages the actions in the &#39;users&#39; table | db.Model inheritance It is a parameter of class User Object oriented programming | init method Is the constructor for the class User Initializes the instance variables within object | @property, @&lt;column&gt;.setter @property is a getter method that extracts from the object @.setter allows the variable that was created to be updated&lt;/li&gt; create, read, update, delete methods Allows the database and specific data inside to be created, read, updated, and deleted | &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.add(self) # performs update when id exists db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Shivansh Goel&#39;, uid=&#39;shiv&#39;, dob=datetime(2007, 10, 27)) u6 = User(name=&#39;Shaurya Goel&#39;, uid=&#39;shaur&#39;, dob=datetime(2007, 10, 27)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Records exist uid toby, or error. Records exist uid niko, or error. Records exist uid lex, or error. Records exist uid whit, or error. Created new uid shiv Created new uid shaur . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by Allows the database and specific data inside to be created, read, updated, and deleted | user.password If the uid is found, the passwords are checks and verified to make sure the password exists and is correct. | | . def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except A uid is inputted and it is checked whether the uid exists or not If the user is found, then nothing is created If there is no user with that uid, a new user is created | user = User(...) This only runs if the user is not found A new user is created using the class User with a name, uid, and password | user.dob and try/except This only runs if the user is not found If the dob that is inputted is the same as the date today, then an error appears | user.create() and try/except This only runs if the user is not found If the object is not created, an error is raised; otherwise, the user is created | | . def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Created {&#39;id&#39;: 9, &#39;name&#39;: &#39;vardaan&#39;, &#39;uid&#39;: &#39;var&#39;, &#39;dob&#39;: &#39;08-07-2006&#39;, &#39;age&#39;: 16} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all This gets all the users from the database | json_ready assignment, google List Comprehension This reads all the users from the table and places them in a list using list comprehension Each are turned into JSON data | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Thomas Edison&#39;, &#39;uid&#39;: &#39;toby&#39;, &#39;dob&#39;: &#39;02-11-1847&#39;, &#39;age&#39;: 176}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;Nikola Tesla&#39;, &#39;uid&#39;: &#39;niko&#39;, &#39;dob&#39;: &#39;03-20-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Alexander Graham Bell&#39;, &#39;uid&#39;: &#39;lex&#39;, &#39;dob&#39;: &#39;03-20-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Eli Whitney&#39;, &#39;uid&#39;: &#39;whit&#39;, &#39;dob&#39;: &#39;03-20-2023&#39;, &#39;age&#39;: 0}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Indiana Jones&#39;, &#39;uid&#39;: &#39;indi&#39;, &#39;dob&#39;: &#39;10-21-1920&#39;, &#39;age&#39;: 102}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Marion Ravenwood&#39;, &#39;uid&#39;: &#39;raven&#39;, &#39;dob&#39;: &#39;10-21-1921&#39;, &#39;age&#39;: 101}, {&#39;id&#39;: 7, &#39;name&#39;: &#39;Shivansh Goel&#39;, &#39;uid&#39;: &#39;shiv&#39;, &#39;dob&#39;: &#39;10-27-2007&#39;, &#39;age&#39;: 15}, {&#39;id&#39;: 8, &#39;name&#39;: &#39;Shaurya Goel&#39;, &#39;uid&#39;: &#39;shaur&#39;, &#39;dob&#39;: &#39;10-27-2007&#39;, &#39;age&#39;: 15}, {&#39;id&#39;: 9, &#39;name&#39;: &#39;vardaan&#39;, &#39;uid&#39;: &#39;var&#39;, &#39;dob&#39;: &#39;08-07-2006&#39;, &#39;age&#39;: 16}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | . . Update Functionality . def update(): # Getting User input, asking for UID. uid = input(&quot;Enter your user id:&quot;) # Using find_by_uid method to search for UID and setting output of that method into &quot;usr&quot; variable usr = find_by_uid(uid) # Conditional Statement: if usr != None: print(&#39;Found the user requested with UID &quot;&#39; + uid + &#39;&quot;.&#39;) pass else: print(&quot;User with this UID is not found, please try again.&quot;) return # Allow for updating of new user attributes newname = input(&quot;Update your name.&quot;) newpw = input(&quot;Update your password.&quot;) # update the user in the database with app.app_context(): try: object = usr.update(name=newname, password=newpw) print(&quot;Updated user: n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error.&quot;) update() . Found the user requested with UID &#34;shaur&#34;. Updated user: {&#39;id&#39;: 8, &#39;name&#39;: &#39;ShauryaISTHEGOAT&#39;, &#39;uid&#39;: &#39;shaur&#39;, &#39;dob&#39;: &#39;10-27-2007&#39;, &#39;age&#39;: 15} . Delete Functionality . def delete(): # Getting User input, asking for UID. uid = input(&quot;Enter your user id:&quot;) # Using find_by_uid method to search for UID and setting output of that method into &quot;usr&quot; variable user = find_by_uid(uid) # Conditional Statement: if user != None: print(&#39;Found the user requested with UID &quot;&#39; + uid + &#39;&quot;.&#39;) pass else: print(&quot;User not found, incorrect UID given.&quot;) return # Deleting the User: with app.app_context(): try: rslt = user.delete() print(&quot;User has been deleted successfully :)&quot;) except: print(&quot;There was an unknown error.&quot;) delete() . Found the user requested with UID &#34;shaur&#34;. User has been deleted successfully :) . &lt;/div&gt; | . | .",
            "url": "https://stg-7.github.io/FastPages/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following... . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | ... | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) . | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions... . Titanic Dataset:This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | . These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset... . Kaggle:The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . HACK #1 - AP PREP . from PIL import Image quizscore = Image.open(&quot;../images/cool.png&quot;) display(quizscore) . HACK #2 - Implementing into My PBL project . import pandas as pd df = pd.read_json(&#39;files/nfl.json&#39;) # Prinitng out objects in terms of Height (Ascending) print(df.sort_values(by=[&#39;Height&#39;], ascending=True)) print() print() print() # Prinitng out objects in terms of Weight (Ascending) print(df.sort_values(by=[&#39;Weight&#39;], ascending=True)) print() print() print() # Prinitng out objects in terms of QB Ranking (Ascending) print(df.sort_values(by=[&#39;QB Ranking&#39;], ascending=True)) print() print() print() . Height Weight QB Ranking 1 70 214 2 8 71 192 9 6 72 207 7 7 72 207 8 9 73 203 10 11 73 207 12 10 74 224 11 3 75 217 4 4 75 231 5 5 75 213 6 0 76 244 1 2 76 229 3 Height Weight QB Ranking 8 71 192 9 9 73 203 10 6 72 207 7 7 72 207 8 11 73 207 12 5 75 213 6 1 70 214 2 3 75 217 4 10 74 224 11 2 76 229 3 4 75 231 5 0 76 244 1 Height Weight QB Ranking 0 76 244 1 1 70 214 2 2 76 229 3 3 75 217 4 4 75 231 5 5 75 213 6 6 72 207 7 7 72 207 8 8 71 192 9 9 73 203 10 10 74 224 11 11 73 207 12 . print(df.sort_values(by=[&#39;Height&#39;], ascending=False)) print() print() print() # Prinitng out objects in terms of Weight print(df.sort_values(by=[&#39;Weight&#39;], ascending=False)) print() print() print() # Prinitng out objects in terms of QB Ranking print(df.sort_values(by=[&#39;QB Ranking&#39;], ascending=False)) print() print() print() . Height Weight QB Ranking 0 76 244 1 2 76 229 3 3 75 217 4 4 75 231 5 5 75 213 6 10 74 224 11 9 73 203 10 11 73 207 12 6 72 207 7 7 72 207 8 8 71 192 9 1 70 214 2 Height Weight QB Ranking 0 76 244 1 4 75 231 5 2 76 229 3 10 74 224 11 3 75 217 4 1 70 214 2 5 75 213 6 6 72 207 7 7 72 207 8 11 73 207 12 9 73 203 10 8 71 192 9 Height Weight QB Ranking 11 73 207 12 10 74 224 11 9 73 203 10 8 71 192 9 7 72 207 8 6 72 207 7 5 75 213 6 4 75 231 5 3 75 217 4 2 76 229 3 1 70 214 2 0 76 244 1 . print(&quot;Average Quarterback Height&quot;) print(df[&#39;Height&#39;].mean()) print() print(&quot;Median Quarterback Height&quot;) print(df[&#39;Height&#39;].median()) print() # Printing out Average and Median Quarterback Height print(&quot;Average Quarterback Weight&quot;) print(df[&#39;Weight&#39;].mean()) print() print(&quot;Median Quarterback Weight&quot;) print(df[&#39;Weight&#39;].median()) print() # Printing out Tallest and Shortest Quarterbacks print(&quot;Tallest Quarterback&quot;) print(df[df.Height == df.Height.max()]) print() print(&quot;Shortest Quarterback&quot;) print(df[df.Height == df.Height.min()]) . Average Quarterback Height 73.5 Median Quarterback Height 73.5 Average Quarterback Weight 215.66666666666666 Median Quarterback Weight 213.5 Tallest Quarterback Height Weight QB Ranking 0 76 244 1 2 76 229 3 Shortest Quarterback Height Weight QB Ranking 1 70 214 2 . EXPLANATION: . In the code box above, I tried using many Pandas helpers. Instead of using an online dataset, I created my own dataset and pulled the 2023 NFL Quarterback Prospects data directly from the university. I obtained information on the top 12 quarterbacks from this year&#39;s draft and used multiple sources to verify the information I entered. In this case, the three columns of data were their height, weight and quarterback rank based on multiple analysts. I sorted through this data and used Panda to list the top five quarterback heights, tallest and shortest quarterbacks, average quarterback height, average quarterback weight, and something unique that I did was use a descriptive statistics function unique to Panda to list. all IQR ranges, maximum values, etc. based on the generated dataset. All data was saved in nfl.json which is a readable file. .",
            "url": "https://stg-7.github.io/FastPages/2.3hacks.html",
            "relUrl": "/2.3hacks.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "MCQ Test Blog 3/7/2023 (Tri. 2 Final)",
            "content": "Score Overview . from PIL import Image huh = Image.open(&quot;../images/huh.png&quot;) display(huh) . Wrong Answers . from PIL import Image wrong1 = Image.open(&quot;../images/wrong1.png&quot;) wrong2 = Image.open(&quot;../images/wrong2.png&quot;) wrong3 = Image.open(&quot;../images/wrong3.png&quot;) display(wrong1) display(wrong2) display(wrong3) . Correcting the Wrong Answers . Question 44 . The Corect Answer is B. The first call to printArgs displays the number 1, followed by the string &quot;*&quot;, followed by the number 1. The second call to printArgs displays the number 2, followed by the string &quot;&quot;, followed by the number 2. . Question 45 . The Correct Answers are C and D. Procedural abstraction helps improve code readability and Procedures created to solve subproblems of a larger problem are called by name. . Question 49 . The Correct Answer is B. Simulations are limited by the model that is used. There may be many reasons for using a simplified model, including ease of implementation. .",
            "url": "https://stg-7.github.io/FastPages/final2.html",
            "relUrl": "/final2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "2.2 Data Compression, Images HACKS",
            "content": "Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . HACK #1 - Happy Face Image . from PIL import Image smile = Image.open(&quot;../images/smiley.png&quot;) display(smile) . HACK #2 - AP PREP . Quiz Overview . from PIL import Image quizoverview = Image.open(&quot;../images/quiz1score.png&quot;) display(quizoverview) . Wong Answer + Solution . from PIL import Image wrong = Image.open(&quot;../images/quiz1wrong.png&quot;) display(wrong) . Solution: Lossless compression algorithms are guaranteed to be able to reconstruct the original data, while lossy compression algorithms are not. . HACK #3 - PROGRAMMING PARADIGMS . import numpy as np from PIL import Image # Load the image image = Image.open(&quot;../images/effeltower.jpg&quot;) image.info[&#39;Title&#39;] = &#39;Eiffel Tower&#39; image.info[&#39;Author&#39;] = &#39;Shaurya Goel&#39; image.info[&#39;Year&#39;] = &#39;2023&#39; img_array = np.asarray(image) binary_pixels = np.unpackbits(img_array, axis=-1) hex_pixels = np.apply_along_axis(lambda x: hex(int(&#39;&#39;.join(map(str, x)), 2))[2:].zfill(2), -1, binary_pixels) blue_image = np.copy(img_array) blue_image[:, :, 1] = 0 blue_image[:, :, 0] = 0 blue_image = Image.fromarray(blue_image) resized_image = blue_image.resize((blue_image.width // 4, blue_image.height // 4)) display(resized_image) . PARADIGM EXPLANATION: . In this HACK, I made an effort to use bluescale (a different byte manipulation technique), print metadata (vital information about the image), and alter the image&#39;s size using scaling techniques. I used a photograph I took, effeltower.jpg, and used the blue image program to convert it to a blue image by setting the green and blue channels to 0 (in &quot;RGB&quot;). Three printed pieces of image metadata were also added by me. This information contained the image&#39;s title, the photographer&#39;s name, and the year it was shot. When a jpg/jpeg file is compressed, additional metadata with the notation &quot;jfif&quot; is present. . TWO IMAGES REPRESENTING LOSSY AND LOSSLESS COMPRESSION: . Lossy = lassen-volcano.jpg | Lossless = green-square-16.png | . The lossy compression example will be the lassen-volcano.jpg image. This is owing to the fact that image file compression will undoubtedly result in a significantly smaller file size, but it will also result in a decrease in image quality because of the image&#39;s fine details and range of colors. It&#39;s probably going to get fuzzier.On the other hand, the green-square-16.png image can be used as an illustration of lossless compression. Because there is only one color in that image, the RGB pixel values will always be the same (without any intentional alteration of the image), the image quality will not change even though the image file size will reduce. .",
            "url": "https://stg-7.github.io/FastPages/2.2hacks.html",
            "relUrl": "/2.2hacks.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "MCQ Test Blog 1/30/2023",
            "content": "MCQ Reflection and Blog . Overall score . . I got questions 17,29, and 50 wrong. | . ## Correcting Wrong Answers . ### Question 17 . . You had to choose one of two answers to this question. I chose the first option (A) correctly, but I chose Option B in error. When I reread the question, I saw that Option D contained a nested if-else statement that, unlike Option B, produced the same outcome as the question’s initial description (val1 &amp; not val2). . Question 29 . . The correct answer is A not B, because as it roates three times it will be facing downward. Furthermore, it will be in middle of the grid as the code goes to completion. . Question 50 . . The answer to the above-given question is option D. - Letter V . Further information and research on ASCII character encoding: . An international standard for encoding the Latin script was developed with the help of the American Standard Code for Information Interchange (ASCII). ASCII was first established in 1963 to enable the interpretation of data between computers. Symbols, numbers, lowercase and uppercase letters, and some instructions are represented. A radix-2 number system needs 7 bits since ASCII is encoded using 1s and 0s. Characters can be encoded using 2 to the power of 7 = 128 different number combinations with 7 bits. . Since ASCII only uses 7 bits to encode characters, using 8 bits in computing technology required the inclusion of additional bits. With this extra digit, extended ASCII up to 256 characters can be encoded. . As can be seen in the ASCII table above, ASCII encodes the specified 128 characters as 7-bit integers and was initially based on the (modern) English alphabet. One can print 95 of the encoded characters. These consist of the numbers 0 through 9, the letters lowercase a through z, uppercase a through z, and punctuation. The original ASCII specification also included 33 teletype machine-derived control codes that were not readable. Although the most of these are no longer in use, some are. Tab, line feed, and carriage return codes. . A lowercase letter, for instance, is represented by 1101001 in binary, 69 in hex (where I is the ninth character), and 105 in decimal in the ASCII encoding. American standard, however the cent () doesn’t have a code point in ASCII. Additionally, it does not accept proper nouns with diacritical marks, such as Beyoncé, or English phrases with diacritical marks, such resume or jalapeo. . Overall Reflection . Overall, I’m pleased with my grade because it demonstrates both my knowledge of the material covered in this class thus far and my ability to respond intelligently to multiple-choice questions of this type. The questions I misunderstood were also a teaching moment for me because they helped me understand how to approach issues of that nature going forward to avoid repeating my errors. Given that they nearly always result in real learning experiences for me, I enjoy having the chance to test myself on what we have studied so far and see how well I do. These kinds of exams let me know where my areas of strength and weakness lie and how I may strengthen those areas. I sincerely hope that when it comes time for this trimester’s multiple-choice final, I will demonstrate significant progress in how I respond to MCQ questions. .",
            "url": "https://stg-7.github.io/FastPages/markdown/2023/01/31/mcCB.html",
            "relUrl": "/markdown/2023/01/31/mcCB.html",
            "date": " • Jan 31, 2023"
        }
        
    
  

  
  
      ,"page0": {
          "title": "About Me",
          "content": "Hello, I’m Shaurya Goel. .",
          "url": "https://stg-7.github.io/FastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://stg-7.github.io/FastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}