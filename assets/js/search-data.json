{
  
    
        "post0": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following... . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | ... | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) . | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions... . Titanic Dataset:This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | . These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset... . Kaggle:The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . HACK #1 - AP PREP . from PIL import Image quizscore = Image.open(&quot;../images/cool.png&quot;) display(quizscore) . HACK #2 - Implementing into My PBL project . import pandas as pd df = pd.read_json(&#39;files/nfl.json&#39;) # Prinitng out objects in terms of Height (Ascending) print(df.sort_values(by=[&#39;Height&#39;], ascending=True)) print() print() print() # Prinitng out objects in terms of Weight (Ascending) print(df.sort_values(by=[&#39;Weight&#39;], ascending=True)) print() print() print() # Prinitng out objects in terms of QB Ranking (Ascending) print(df.sort_values(by=[&#39;QB Ranking&#39;], ascending=True)) print() print() print() . Height Weight QB Ranking 1 70 214 2 8 71 192 9 6 72 207 7 7 72 207 8 9 73 203 10 11 73 207 12 10 74 224 11 3 75 217 4 4 75 231 5 5 75 213 6 0 76 244 1 2 76 229 3 Height Weight QB Ranking 8 71 192 9 9 73 203 10 6 72 207 7 7 72 207 8 11 73 207 12 5 75 213 6 1 70 214 2 3 75 217 4 10 74 224 11 2 76 229 3 4 75 231 5 0 76 244 1 Height Weight QB Ranking 0 76 244 1 1 70 214 2 2 76 229 3 3 75 217 4 4 75 231 5 5 75 213 6 6 72 207 7 7 72 207 8 8 71 192 9 9 73 203 10 10 74 224 11 11 73 207 12 . print(df.sort_values(by=[&#39;Height&#39;], ascending=False)) print() print() print() # Prinitng out objects in terms of Weight (Ascending) print(df.sort_values(by=[&#39;Weight&#39;], ascending=False)) print() print() print() # Prinitng out objects in terms of QB Ranking (Ascending) print(df.sort_values(by=[&#39;QB Ranking&#39;], ascending=False)) print() print() print() . Height Weight QB Ranking 0 76 244 1 2 76 229 3 3 75 217 4 4 75 231 5 5 75 213 6 10 74 224 11 9 73 203 10 11 73 207 12 6 72 207 7 7 72 207 8 8 71 192 9 1 70 214 2 Height Weight QB Ranking 0 76 244 1 4 75 231 5 2 76 229 3 10 74 224 11 3 75 217 4 1 70 214 2 5 75 213 6 6 72 207 7 7 72 207 8 11 73 207 12 9 73 203 10 8 71 192 9 Height Weight QB Ranking 11 73 207 12 10 74 224 11 9 73 203 10 8 71 192 9 7 72 207 8 6 72 207 7 5 75 213 6 4 75 231 5 3 75 217 4 2 76 229 3 1 70 214 2 0 76 244 1 . print(&quot;Average Quarterback Height&quot;) print(df[&#39;Height&#39;].mean()) print() print(&quot;Median Quarterback Height&quot;) print(df[&#39;Height&#39;].median()) print() # Printing out Average and Median Quarterback Height print(&quot;Average Quarterback Weight&quot;) print(df[&#39;Weight&#39;].mean()) print() print(&quot;Median Quarterback Weight&quot;) print(df[&#39;Weight&#39;].median()) print() # Printing out Tallest and Shortest Quarterbacks print(&quot;Tallest Quarterback&quot;) print(df[df.Height == df.Height.max()]) print() print(&quot;Shortest Quarterback&quot;) print(df[df.Height == df.Height.min()]) . Average Quarterback Height 73.5 Median Quarterback Height 73.5 Average Quarterback Weight 215.66666666666666 Median Quarterback Weight 213.5 Tallest Quarterback Height Weight QB Ranking 0 76 244 1 2 76 229 3 Shortest Quarterback Height Weight QB Ranking 1 70 214 2 . EXPLANATION: . In the code box above, I tried using many Pandas helpers. Instead of using an online dataset, I created my own dataset and pulled the 2023 NFL Quarterback Prospects data directly from the university. I obtained information on the top 12 quarterbacks from this year&#39;s draft and used multiple sources to verify the information I entered. In this case, the three columns of data were their height, weight and quarterback rank based on multiple analysts. I sorted through this data and used Panda to list the top five quarterback heights, tallest and shortest quarterbacks, average quarterback height, average quarterback weight, and something unique that I did was use a descriptive statistics function unique to Panda to list. all IQR ranges, maximum values, etc. based on the generated dataset. All data was saved in nfl.json which is a readable file. .",
            "url": "https://stg-7.github.io/FastPages/2.3hacks.html",
            "relUrl": "/2.3hacks.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "MCQ Test Blog 3/7/2023 (Tri. 2 Final)",
            "content": "Score Overview . from PIL import Image huh = Image.open(&quot;../images/huh.png&quot;) display(huh) . Wrong Answers . from PIL import Image wrong1 = Image.open(&quot;../images/wrong1.png&quot;) wrong2 = Image.open(&quot;../images/wrong2.png&quot;) wrong3 = Image.open(&quot;../images/wrong3.png&quot;) display(wrong1) display(wrong2) display(wrong3) . Correcting the Wrong Answers . Question 44 . The Corect Answer is B. The first call to printArgs displays the number 1, followed by the string &quot;*&quot;, followed by the number 1. The second call to printArgs displays the number 2, followed by the string &quot;&quot;, followed by the number 2. . Question 45 . The Correct Answers are C and D. Procedural abstraction helps improve code readability and Procedures created to solve subproblems of a larger problem are called by name. . Question 49 . The Correct Answer is B. Simulations are limited by the model that is used. There may be many reasons for using a simplified model, including ease of implementation. .",
            "url": "https://stg-7.github.io/FastPages/final2.html",
            "relUrl": "/final2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "2.2 Data Compression, Images HACKS",
            "content": "Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . HACK #1 - Happy Face Image . from PIL import Image smile = Image.open(&quot;../images/smiley.png&quot;) display(smile) . HACK #2 - AP PREP . Quiz Overview . from PIL import Image quizoverview = Image.open(&quot;../images/quiz1score.png&quot;) display(quizoverview) . Wong Answer + Solution . from PIL import Image wrong = Image.open(&quot;../images/quiz1wrong.png&quot;) display(wrong) . Solution: Lossless compression algorithms are guaranteed to be able to reconstruct the original data, while lossy compression algorithms are not. . HACK #3 - PROGRAMMING PARADIGMS . import numpy as np from PIL import Image # Load the image image = Image.open(&quot;../images/effeltower.jpg&quot;) image.info[&#39;Title&#39;] = &#39;Eiffel Tower&#39; image.info[&#39;Author&#39;] = &#39;Shaurya Goel&#39; image.info[&#39;Year&#39;] = &#39;2023&#39; img_array = np.asarray(image) binary_pixels = np.unpackbits(img_array, axis=-1) hex_pixels = np.apply_along_axis(lambda x: hex(int(&#39;&#39;.join(map(str, x)), 2))[2:].zfill(2), -1, binary_pixels) blue_image = np.copy(img_array) blue_image[:, :, 1] = 0 blue_image[:, :, 0] = 0 blue_image = Image.fromarray(blue_image) resized_image = blue_image.resize((blue_image.width // 4, blue_image.height // 4)) display(resized_image) . PARADIGM EXPLANATION: . In this HACK, I made an effort to use bluescale (a different byte manipulation technique), print metadata (vital information about the image), and alter the image&#39;s size using scaling techniques. I used a photograph I took, effeltower.jpg, and used the blue image program to convert it to a blue image by setting the green and blue channels to 0 (in &quot;RGB&quot;). Three printed pieces of image metadata were also added by me. This information contained the image&#39;s title, the photographer&#39;s name, and the year it was shot. When a jpg/jpeg file is compressed, additional metadata with the notation &quot;jfif&quot; is present. . TWO IMAGES REPRESENTING LOSSY AND LOSSLESS COMPRESSION: . Lossy = lassen-volcano.jpg | Lossless = green-square-16.png | . The lossy compression example will be the lassen-volcano.jpg image. This is owing to the fact that image file compression will undoubtedly result in a significantly smaller file size, but it will also result in a decrease in image quality because of the image&#39;s fine details and range of colors. It&#39;s probably going to get fuzzier.On the other hand, the green-square-16.png image can be used as an illustration of lossless compression. Because there is only one color in that image, the RGB pixel values will always be the same (without any intentional alteration of the image), the image quality will not change even though the image file size will reduce. .",
            "url": "https://stg-7.github.io/FastPages/2.2hacks.html",
            "relUrl": "/2.2hacks.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "MCQ Test Blog 1/30/2023",
            "content": "MCQ Reflection and Blog . Overall score . . I got questions 17,29, and 50 wrong. | . ## Correcting Wrong Answers . ### Question 17 . . You had to choose one of two answers to this question. I chose the first option (A) correctly, but I chose Option B in error. When I reread the question, I saw that Option D contained a nested if-else statement that, unlike Option B, produced the same outcome as the question’s initial description (val1 &amp; not val2). . Question 29 . . The correct answer is A not B, because as it roates three times it will be facing downward. Furthermore, it will be in middle of the grid as the code goes to completion. . Question 50 . . The answer to the above-given question is option D. - Letter V . Further information and research on ASCII character encoding: . An international standard for encoding the Latin script was developed with the help of the American Standard Code for Information Interchange (ASCII). ASCII was first established in 1963 to enable the interpretation of data between computers. Symbols, numbers, lowercase and uppercase letters, and some instructions are represented. A radix-2 number system needs 7 bits since ASCII is encoded using 1s and 0s. Characters can be encoded using 2 to the power of 7 = 128 different number combinations with 7 bits. . Since ASCII only uses 7 bits to encode characters, using 8 bits in computing technology required the inclusion of additional bits. With this extra digit, extended ASCII up to 256 characters can be encoded. . As can be seen in the ASCII table above, ASCII encodes the specified 128 characters as 7-bit integers and was initially based on the (modern) English alphabet. One can print 95 of the encoded characters. These consist of the numbers 0 through 9, the letters lowercase a through z, uppercase a through z, and punctuation. The original ASCII specification also included 33 teletype machine-derived control codes that were not readable. Although the most of these are no longer in use, some are. Tab, line feed, and carriage return codes. . A lowercase letter, for instance, is represented by 1101001 in binary, 69 in hex (where I is the ninth character), and 105 in decimal in the ASCII encoding. American standard, however the cent () doesn’t have a code point in ASCII. Additionally, it does not accept proper nouns with diacritical marks, such as Beyoncé, or English phrases with diacritical marks, such resume or jalapeo. . Overall Reflection . Overall, I’m pleased with my grade because it demonstrates both my knowledge of the material covered in this class thus far and my ability to respond intelligently to multiple-choice questions of this type. The questions I misunderstood were also a teaching moment for me because they helped me understand how to approach issues of that nature going forward to avoid repeating my errors. Given that they nearly always result in real learning experiences for me, I enjoy having the chance to test myself on what we have studied so far and see how well I do. These kinds of exams let me know where my areas of strength and weakness lie and how I may strengthen those areas. I sincerely hope that when it comes time for this trimester’s multiple-choice final, I will demonstrate significant progress in how I respond to MCQ questions. .",
            "url": "https://stg-7.github.io/FastPages/markdown/2023/01/31/mcCB.html",
            "relUrl": "/markdown/2023/01/31/mcCB.html",
            "date": " • Jan 31, 2023"
        }
        
    
  

  
  
      ,"page0": {
          "title": "About Me",
          "content": "Hello, I’m Shaurya Goel. .",
          "url": "https://stg-7.github.io/FastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://stg-7.github.io/FastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}